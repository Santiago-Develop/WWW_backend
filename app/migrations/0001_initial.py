# Generated by Django 4.2 on 2023-05-01 23:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('documentType', models.CharField(choices=[('NIT', 'NIT'), ('CC', 'CC')], default='CC')),
                ('documentNumber', models.CharField(max_length=100)),
                ('phone', models.IntegerField()),
                ('urlImg', models.CharField()),
                ('email', models.EmailField(max_length=100)),
                ('role', models.CharField(choices=[('ADMIN', 'Administrator'), ('CUSTOMER', 'Customer'), ('MESSAGER', 'Messager')], default='CUSTOMER')),
                ('password', models.CharField(default='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Office',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('phone', models.IntegerField()),
                ('id_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_customer_office', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Office',
                'verbose_name_plural': 'Offices',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=100)),
                ('amount', models.IntegerField()),
                ('transport', models.CharField(choices=[('CAR', 'Car'), ('MOTORCYCLE', 'Motorcycle'), ('TRUCK', 'truck')], default='MOTORCYCLE')),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('description', models.CharField(max_length=100)),
                ('id_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_customer_service', to=settings.AUTH_USER_MODEL)),
                ('id_messager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('id_source_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_source_destination', to='app.office')),
                ('id_source_office', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_source_office', to='app.office')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('new_state', models.CharField(max_length=100)),
                ('photo', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('current_date_time', models.DateTimeField(auto_now_add=True)),
                ('id_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.service')),
                ('id_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.state')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'States',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Engagement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='id_customer_engagement', to=settings.AUTH_USER_MODEL)),
                ('id_messager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Engagement',
                'verbose_name_plural': 'Engagements',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('id_country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.country')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('id_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Cities',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='id_city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.city'),
        ),
        migrations.AddField(
            model_name='user',
            name='id_country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.country'),
        ),
        migrations.AddField(
            model_name='user',
            name='id_department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.department'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
